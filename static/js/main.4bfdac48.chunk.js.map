{"version":3,"sources":["components/views/LandingPage/LandingPage.js","components/views/ResearchListPage/Sections/MoodBoard/initial-data.js","components/views/ResearchListPage/Sections/MoodBoard/task.jsx","components/views/ResearchListPage/Sections/MoodBoard/column.jsx","components/views/ResearchListPage/Sections/MoodBoard/MoodBoard.js","components/views/ResearchListPage/Sections/SlideList.js","components/views/ResearchListPage/Sections/ListItems.js","components/views/ResearchListPage/ResearchListPage.js","components/views/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","initialData","tasks","id","content","columns","title","taskIds","columnOrder","Container","styled","div","props","isDragDisabled","isDragging","Handle","Task","this","task","draggableId","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","React","Component","Title","h3","TaskList","isDraggingOver","InnerList","nextProps","map","key","Column","column","droppableId","type","isDropDisabled","droppableProps","placeholder","taskMap","taskId","PureComponent","MoodBoard","state","onDragStart","start","document","body","style","color","transition","homeIndex","indexOf","source","setState","onDragUpdate","update","destination","opacity","Object","keys","length","backgroundColor","onDragEnd","result","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskIds","newColumn","newColumnOrder","direction","columnId","SlideList","slides","click","bind","$slideList","colElements","createResearchContent","researchContentWrapper","getElementById","gridElements","childElementCount","i","innerHTML","j","push","k","randomImageNumber","Math","floor","random","children","querySelector","querySelectorAll","forEach","thumbnail","idx","addEventListener","thumbnailSrc","src","addToListItems","scrollTop","window","scrollY","itemWrappers","wrapperMinHeight","clientHeight","screenHeight","height","researchContentClickEvent","thumbnailImage","thumbnailWidth","width","thumbnailHeight","collectionSlideWrapper","thumbnailRatio","thumbnailTransitionWidth","thumbnailContainer","closest","thumbnailInner","classList","add","thumbnailDomRect","getBoundingClientRect","thumbnailTop","top","thumbnailLeft","left","scrollX","clientWidth","setTimeout","collectionDomRect","collectionTop","collectionLeft","remove","paddingLeft","thumbnailMoving","thumbnailFixedPosition","collectionSlide","collectionSlideStyle","currentStyle","getComputedStyle","collectionThumbnailMarginRight","parseInt","marginRight","replace","collectionThumbnailWidthSum","collectionSlideMoving","onscroll","target","elem","html","getElementsByTagName","display","overflowY","openModalPopup","closeModalPopup","slidesArray","$this","unshift","slickGoTo","settings","dots","infinite","slidesToShow","slidesToScroll","variableWidth","className","alt","slide","ListItems","ResearchListPage","NavBar","to","App","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4bfdac48.chunk.js","sourcesContent":["import React from 'react'\n\nfunction LandingPage() {\n    return (\n        <div>\n            LandingPage\n        </div>\n    )\n}\n\nexport default LandingPage\n","const initialData = {\n  tasks: {\n    \"task-1\": { id: \"task-1\", content: \"box1\" },\n    \"task-2\": { id: \"task-2\", content: \"box2\" },\n    \"task-3\": { id: \"task-3\", content: \"box3\" },\n    \"task-4\": { id: \"task-4\", content: \"box4\" },\n    \"task-5\": { id: \"task-5\", content: \"box5\" },\n    \"task-6\": { id: \"task-6\", content: \"box6\" },\n    \"task-7\": { id: \"task-7\", content: \"box7\" },\n    \"task-8\": { id: \"task-8\", content: \"box8\" },\n    \"task-9\": { id: \"task-9\", content: \"box9\" },\n    \"task-10\": { id: \"task-10\", content: \"box10\" },\n    \"task-11\": { id: \"task-11\", content: \"box11\" },\n    \"task-12\": { id: \"task-12\", content: \"box12\" },\n    \"task-13\": { id: \"task-13\", content: \"box13\" },\n    \"task-14\": { id: \"task-14\", content: \"box14\" },\n    \"task-15\": { id: \"task-15\", content: \"box15\" },\n    \"task-16\": { id: \"task-16\", content: \"box16\" },\n    \"task-17\": { id: \"task-17\", content: \"box17\" },\n    \"task-18\": { id: \"task-18\", content: \"box18\" },\n    \"task-19\": { id: \"task-19\", content: \"box19\" },\n    \"task-20\": { id: \"task-20\", content: \"box20\" },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Column1\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\", \"task-4\", \"task-5\"],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Column2\",\n      taskIds: [\n        \"task-6\",\n        \"task-7\",\n        \"task-8\",\n        \"task-9\",\n        \"task-10\",\n        \"task-11\",\n        \"task-12\",\n      ],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Column3\",\n      taskIds: [\"task-13\", \"task-14\", \"task-15\", \"task-16\", \"task-17\"],\n    },\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n};\n\nexport default initialData;","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom: 8px;\n    background-color: ${props => \n        props.isDragDisabled \n        ? 'lightgrey' \n        : props.isDragging\n            ? 'lightgreen'\n            : 'white'};\n\n    display: flex;\n    line-height: 20px;\n`;\n\nconst Handle = styled.div`\n    width: 20px;\n    height: 20px;\n    background-color: orange;\n    border-radius: 4px;\n    margin-right: 8px;\n`;\n\nexport default class Task extends React.Component{\n    render(){\n        const isDragDisabled = this.props.task.id === 'task-1';\n        return (\n          <Draggable\n            draggableId={this.props.task.id}\n            index={this.props.index}\n            // isDragDisabled={isDragDisabled}\n          >\n            {(provided, snapshot) => (\n              <Container\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n                isDragging={snapshot.isDragging}\n                // isDragDisabled={isDragDisabled}\n              >\n                <Handle {...provided.dragHandleProps} />\n                {this.props.task.content}\n              </Container>\n            )}\n          </Draggable>\n        );\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './task';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 33.33%;\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    background-color: white;\n`;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${(props) => \n        props.isDraggingOver ? \"lightgrey\" : \"inherit\"};\n    flex-grow: 1;\n    min-height: 100px;\n`;\n\nclass InnerList extends React.Component{\n    shouldComponentUpdate(nextProps){\n        if(nextProps.tasks === this.props.tasks){\n            return false;\n        }\n        return true;\n    }\n    render(){\n        return this.props.tasks.map((task, index) => (\n            <Task key={task.id} task={task} index={index} />\n        ));\n    }\n}\n\nexport default class Column extends React.Component {\n    render() {\n        return (\n          <Draggable\n            draggableId={this.props.column.id}\n            index={this.props.index}\n          >\n            {provided => (\n              <Container {...provided.draggableProps} ref={provided.innerRef}>\n                <Title {...provided.dragHandleProps}>\n                  {this.props.column.title}\n                </Title>\n                <Droppable\n                  droppableId={this.props.column.id}\n                  type=\"task\"\n                  isDropDisabled={this.props.isDropDisabled}\n                >\n                  {(provided, snapshot) => (\n                    <TaskList\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      isDraggingOver={snapshot.isDraggingOver}\n                    >\n                      <InnerList tasks={this.props.tasks} />\n                      {provided.placeholder}\n                    </TaskList>\n                  )}\n                </Droppable>\n              </Container>\n            )}\n          </Draggable>\n        );\n    }\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nimport './MoodBoard.css';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nclass InnerList extends React.PureComponent{\n    render(){\n        const { column, taskMap, index} = this.props;\n        const tasks = column.taskIds.map(taskId => taskMap[taskId]);\n        return (\n            <Column\n            key={column.id}\n            column={column}\n            tasks={tasks}\n            index={index}\n            // isDropDisabled={isDropDisabled}\n            />\n        );\n    }\n}\n\nclass MoodBoard extends React.Component{\n    state = initialData;\n\n    onDragStart = start => {\n        document.body.style.color = 'orange';\n        document.body.style.transition = 'background-color 0.2s ease'\n\n        const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n        this.setState({\n            homeIndex,\n        });\n    };\n\n    onDragUpdate = update => {\n        const { destination } = update;\n        const opacity = destination\n            ? destination.index / Object.keys(this.state.tasks).length\n            : 0;\n        document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    };\n\n    onDragEnd = result => {\n        this.setState({\n            homeIndex: null,\n        });\n\n        document.body.style.color = \"inherit\";\n        document.body.style.backgroundColor = \"orange\";\n\n        const { destination, source, draggableId, type } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId && \n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        if(type === 'column'){\n            const newColumnOrder = Array.from(this.state.columnOrder);\n            newColumnOrder.splice(source.index, 1);\n            newColumnOrder.splice(destination.index, 0, draggableId);\n\n            const newState = {\n                ...this.state,\n                columnOrder: newColumnOrder,\n            };\n\n            this.setState(newState);\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        if(start === finish){\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n\n            const newColumn = {\n              ...start,\n              taskIds: newTaskIds,\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn,\n                },\n            };\n\n            this.setState(newState);\n            return;\n\n        }\n\n        // Moving from one list to another\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds,\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds,\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish\n            },\n        };\n        this.setState(newState);\n    };\n\n    render(){\n        return (\n          <DragDropContext\n            onDragStart={this.onDragStart}\n            onDragUpdate={this.onDragUpdate}\n            onDragEnd={this.onDragEnd}\n          >\n            <Droppable\n              droppableId=\"all-columns\"\n              direction=\"horizontal\"\n              type=\"column\"\n            >\n              {provided => (\n                <Container\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                >\n                  {this.state.columnOrder.map((columnId, index) => {\n                    const column = this.state.columns[columnId];\n                    const isDropDisabled = index < this.state.homeIndex;\n                    return (\n                        <InnerList\n                            key={column.id}\n                            column={column}\n                            taskMap={this.state.tasks}\n                            index={index}\n                        />\n                    );\n                  })}\n                  {provided.placeholder}\n                </Container>\n              )}\n            </Droppable>\n          </DragDropContext>\n        );\n    }\n}\n\nexport default MoodBoard\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport MoodBoard from './MoodBoard/MoodBoard';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './SlideList.css';\n\nclass SlideList extends React.Component {\n    componentDidMount(){\n        var $slideList = this;\n        var colElements = new Array();\n\n        function createResearchContent() {\n            var researchContentWrapper = document.getElementById(\"researchList\");\n            var gridElements = \"\";\n            var gridLength = 5;\n            var colLength = 23;\n            var idx;\n\n            if (researchContentWrapper.childElementCount === 0) {\n                for (var i = 1; i <= gridLength; i++) {\n                    gridElements += `\n                    <li class=\"grid-con\">\n                        <div class=\"grid-inner\">\n                            <ul class=\"list-wrap\">\n                            </ul>\n                        </div>\n                    </li>\n                    `;\n                }\n                researchContentWrapper.innerHTML = gridElements;\n            }\n\n            for (var j = 0; j < gridLength; j++) {\n                colElements.push(\"\");\n                for (var k = 1; k <= colLength; k++) {\n                    var randomImageNumber = Math.floor(Math.random() * colLength) + 1;\n                    colElements[j] += `\n                    <li class=\"list-con\">\n                        <div class=\"list-inner\">\n                            <button class=\"thumbnail\">\n                                <img src=\"assets/images/example${randomImageNumber}.jpg\" alt=\"thumbnail\">\n                            </button>\n                        </div>\n                    </li>`;\n                }\n                researchContentWrapper.children[j].querySelector('.list-wrap').innerHTML = colElements[j];\n                var thumbnails = researchContentWrapper.children[j].querySelectorAll('.thumbnail');\n                thumbnails.forEach(function(thumbnail, idx){\n                    thumbnail.addEventListener('click', function(){\n                        var thumbnailSrc = this.querySelector(\"img\").src;\n                        $slideList.click(thumbnailSrc);\n                    });\n                });\n            }\n        }\n\n        createResearchContent();\n\n        function addToListItems() {\n            var scrollTop = window.scrollY;\n            var itemWrappers = document.querySelectorAll('#researchList .grid-con');\n            var wrapperMinHeight = itemWrappers[0].clientHeight;\n            var screenHeight = window.height;\n            for (var i = 0; i < itemWrappers.length; i++) {\n                if (itemWrappers[i].clientHeight < wrapperMinHeight && itemWrappers[i].clientHeight !== 0) {\n                    wrapperMinHeight = itemWrappers[i].clientHeight;\n                }\n            }\n            var addPointSum = wrapperMinHeight - screenHeight;\n            var scrollTopSum = scrollTop + screenHeight;\n\n            if (addPointSum < scrollTopSum) {\n                createResearchContent();\n                researchContentClickEvent();\n            }\n        }\n\n        window.onscroll = function () {\n            addToListItems();\n        }\n\n        function researchContentClickEvent() {\n            var thumbnailClass = \".research-list-area .list-grid-area .thumbnail\";\n            var thumbnails = document.querySelectorAll(thumbnailClass);\n            thumbnails.forEach(function (thumbnail, idx) {\n                thumbnail.addEventListener(\"click\", function () {\n                    var thumbnailImage = thumbnail.querySelector('img');\n                    var thumbnailWidth = thumbnailImage.width;\n                    var thumbnailHeight = thumbnailImage.height;\n                    var thumbnailSrc = thumbnailImage.src;\n                    var collectionSlideWrapper = document.querySelector('.research-collection-area');\n                    var collectionThumbnailHieght = collectionSlideWrapper.clientHeight;\n                    var thumbnailRatio = collectionThumbnailHieght / thumbnailHeight;\n                    var thumbnailTransitionWidth = Math.floor(thumbnailWidth * thumbnailRatio);\n                    var thumbnailContainer = thumbnail.closest('.list-con');\n                    var thumbnailInner = thumbnail.closest('.list-inner');\n\n                    thumbnailContainer.classList.add('selected');\n\n                    function thumbnailFixedPosition() {\n                        var thumbnailDomRect = thumbnail.getBoundingClientRect();\n                        var thumbnailTop = thumbnailDomRect.top - window.scrollY;\n                        var thumbnailLeft = thumbnailDomRect.left - window.scrollX;\n                        thumbnailInner.style.top = thumbnailTop + 'px';\n                        thumbnailInner.style.left = thumbnailLeft + 'px';\n                        thumbnailInner.style.width = thumbnailContainer.clientWidth + 'px';\n                        setTimeout(() => {\n                            thumbnailMoving();\n                        }, 0);\n                    }\n\n                    function collectionSlideMoving() {\n                        var collectionSlide = collectionSlideWrapper.querySelector('.slick-slide')\n                        var collectionSlideStyle = collectionSlide.currentStyle || window.getComputedStyle(collectionSlide);\n                        var collectionThumbnailMarginRight = parseInt(collectionSlideStyle.marginRight.replace(\"px\",\"\"));\n                        var collectionThumbnailWidthSum = thumbnailTransitionWidth + collectionThumbnailMarginRight;\n                        collectionSlideWrapper.style.paddingLeft = collectionThumbnailWidthSum + 'px';\n                        collectionSlideWrapper.classList.add('active');\n                    }\n\n                    function thumbnailMoving() {\n                        var collectionDomRect = collectionSlideWrapper.getBoundingClientRect();\n                        var collectionTop = collectionDomRect.top;\n                        var collectionLeft = collectionDomRect.left;\n                        thumbnailInner.style.top = collectionTop + 'px';\n                        thumbnailInner.style.left = collectionLeft + 'px';\n                        thumbnailInner.style.width = thumbnailTransitionWidth + 'px';\n                        setTimeout(() => {\n                            addToCollectionSlide();\n                        }, 500);\n                    }\n\n                    function addToCollectionSlide() {\n                        thumbnailContainer.remove();\n                        collectionSlideWrapper.style.paddingLeft = '0px';\n                        collectionSlideWrapper.classList.remove('active');\n                    }\n\n                    thumbnailFixedPosition();\n                    collectionSlideMoving();\n                    addToListItems();\n                });\n            });\n        }\n\n        researchContentClickEvent();\n        \n        function openMoodBoard() {\n            var btn = document.getElementById('moodBoardOpenBtn');\n            btn.addEventListener('click', function () {\n                openModalPopup('moodBoardPopup');\n                setTimeout(() => {\n                    // createMoodBoardItemList();\n                }, 250);\n            });\n        }\n\n        openMoodBoard();\n\n        function closeMoodBoard() {\n            var btn = document.getElementById('moodBoardCloseBtn');\n            btn.addEventListener('click', function () {\n                closeModalPopup('moodBoardPopup');\n            });\n        }\n\n        closeMoodBoard();\n\n        function openModalPopup(target) {\n            var elem = document.getElementById(target);\n            var html = document.getElementsByTagName('html');\n            elem.style.display = \"block\";\n            html[0].style.overflowY = \"hidden\";\n        }\n\n        function closeModalPopup(target) {\n            var elem = document.getElementById(target);\n            var html = document.getElementsByTagName('html');\n            elem.style.display = \"none\";\n            html[0].style.overflowY = \"auto\";\n        }\n        /*\n        function createMoodBoardItemList() {\n            var moodBoardListWrapper = document.getElementById('moodBoardListArea');\n            var collectionSlideList = document.querySelectorAll('.research-collection-area .slick-slide');\n            var gridSizer = document.querySelector('.modal-popup-area .modal-thumbnail-grid-area .modal-thumbnail-grid-sizer').clientWidth;\n            var gridAreaWidth = moodBoardListWrapper.clientWidth;\n            var gridLength = Math.round(gridAreaWidth / gridSizer);\n            var gridHtml = '';\n            \n            for(var i = 0; i < gridLength; i++){\n                gridHtml += `\n                <li class=\"modal-thumbnail-grid-con\">\n                    <div class=\"modal-thumbnail-grid-inner\">\n                        <ul class=\"modal-thumbnail-list-wrap\"></ul>\n                    </div>\n                </li>\n                `;\n            };\n            moodBoardListWrapper.innerHTML = gridHtml;\n            \n            var gridElements = document.querySelectorAll('.modal-popup-area .modal-thumbnail-grid-area .modal-thumbnail-grid-con');\n            var gridArr = new Array();\n            var gridIdx = 0;\n            var imgSrc;\n            collectionSlideList.forEach(function (elem, idx) {\n                imgSrc = elem.querySelector('img').getAttribute('src');\n                if (idx < gridLength){\n                    gridArr.push(\"\");\n                }\n                if (gridLength <= gridIdx){\n                    gridIdx = 0;\n                }\n                gridArr[gridIdx] += `\n                <li class=\"modal-thumbnail-list-con\">\n                    <div class=\"modal-thumbnail-list-inner\">\n                        <button class=\"modal-thumbnail\"><img src=\"${imgSrc}\" alt=\"thumbnail\" id=\"moodBoardThumbnail-${idx}\"></button>\n                    </div>\n                </li>\n                `;\n                gridIdx++;\n            });\n            gridElements.forEach(function (gridElem, gridIdx) {\n                gridElem.querySelector('.modal-thumbnail-list-wrap').innerHTML = gridArr[gridIdx];\n            });\n        }\n        */\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n          slides: [\n            \"assets/images/example22.jpg\",\n            \"assets/images/example2.jpg\",\n            \"assets/images/example12.jpg\",\n            \"assets/images/example11.jpg\",\n            \"assets/images/example14.jpg\",\n            \"assets/images/example3.jpg\",\n            \"assets/images/example1.jpg\",\n            \"assets/images/example4.jpg\",\n            \"assets/images/example6.jpg\",\n            \"assets/images/example7.jpg\",\n            \"assets/images/example9.jpg\",\n          ],\n        };\n        this.click = this.click.bind(this);\n    }\n    click(thumbnailSrc) {\n        const { slides } = this.state;\n        const slidesArray = this.state.slides;\n        const $this = this;\n        slidesArray.unshift(thumbnailSrc);\n        setTimeout(function(){\n            $this.setState({\n                slides: slidesArray,\n                slickGoTo: 0,\n            });\n        }, 500);\n    }\n    render(){\n        const settings = {\n            dots: false,\n            infinite: false,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            variableWidth: true,\n        };\n        return (\n        <div>\n            <div className=\"research-header\">\n                <div className=\"title-wrap\">\n                    <h3 className=\"title\">Title area</h3>\n                    <div className=\"button-wrap\">\n                        <button id=\"moodBoardOpenBtn\">\n                            <img src=\"assets/images/icon.png\" alt=\"open mood board\" />\n                        </button>\n                    </div>\n                </div>\n                <div className=\"research-collection-area\">\n                    <Slider {...settings}>\n                    {this.state.slides.map(function (slide) {\n                        return (\n                        <div key={slide}>\n                            <button className=\"thumbnail\">\n                                <img src={slide} alt=\"thumbnail\" />\n                            </button>\n                        </div>\n                        );\n                    })}\n                    </Slider>\n                </div>\n            </div>\n            <div className=\"research-list-area\">\n                <div className=\"list-grid-area\">\n                    <ul id=\"researchList\" className=\"grid-wrap clearfix\"></ul>\n                </div>\n            </div>\n            <div id=\"moodBoardPopup\" className=\"modal-popup-area\">\n                <div className=\"modal-popup-wrap\">\n                    <div className=\"modal-popup-con\">\n                        <div className=\"modal-close-button-wrap\">\n                            <button id=\"moodBoardCloseBtn\"><span>close mood board</span></button>\n                        </div>\n                        <div className=\"modal-popup-inner\">\n                            <div className=\"modal-thumbnail-grid-area\">\n                                <div id=\"moodBoardListArea\" className=\"clearfix\">\n                                    <MoodBoard/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-bottom-button-wrap\">\n                    <div className=\"modal-bottom-button-con\">\n                        <button id=\"moodBoardDeleteZone\" className=\"delete\">삭제하기</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default SlideList\n","import React from 'react';\nimport './ListItems.css';\n\nfunction ListItems() {\n    return (\n        <div className=\"research-list-area\">\n            <div className=\"list-grid-area\">\n                <ul id=\"researchList\" className=\"grid-wrap clearfix\"></ul>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItems\n","import React from 'react'\nimport SlideList from './Sections/SlideList';\nimport ListItems from './Sections/ListItems';\n\nfunction ResearchListPage() {\n    return (\n        <article className=\"research-block-area\">\n            <SlideList />\n            <ListItems />\n        </article>\n    );\n}\n\nexport default ResearchListPage;\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/ResearchList\">ResearchList</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavBar\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport LandingPage from './components/views/LandingPage/LandingPage.js';\nimport ResearchListPage from \"./components/views/ResearchListPage/ResearchListPage.js\";\nimport NavBar from './components/views/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={(<div>Loading...</div>)}>\n        <div>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/ResearchList\" component={ResearchListPage} />\n          </Switch>\n        </div>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}